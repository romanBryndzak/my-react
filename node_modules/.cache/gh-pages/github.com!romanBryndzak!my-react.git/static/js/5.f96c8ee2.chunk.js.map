{"version":3,"sources":["Page/Login.jsx"],"names":["LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","name","placeholder","validate","required","component","Input","type","captchaUrl","src","alt","className","auxiliary","errorLogin","error","commonError","but","connect","state","isAuth","getIsAuth","getCaptchaUrlSelector","loginThunk","to","style","margin","formData","email","password","rememberMe","captcha"],"mappings":"wGAAA,gIAwCMA,EAAiBC,IAAU,CAACC,KAAM,SAAjBD,EA7BL,SAACE,GACf,OACI,0BAAMC,SAAUD,EAAME,cAClB,6BACI,kBAAC,IAAD,CAAOC,KAAM,QAASC,YAAa,QAASC,SAAU,CAACC,KAAWC,UAAWC,OAEjF,6BACI,kBAAC,IAAD,CAAOL,KAAM,WAAYC,YAAa,WAC/BK,KAAM,WAAYJ,SAAU,CAACC,KAAWC,UAAWC,OAE9D,6BACI,kBAAC,IAAD,CAAOD,UAAWC,IAAOL,KAAM,aAAcM,KAAM,aADvD,gBAGA,6BACKT,EAAMU,YAAc,yBAAKC,IAAKX,EAAMU,WAAYE,IAAK,YACrDZ,EAAMU,YACP,kBAAC,IAAD,CAAOP,KAAM,UAAWC,YAAa,2BAA4BG,UAAWC,OAGhF,yBAAKK,UAAWC,IAAUC,YACrBf,EAAMgB,OAAS,0BAAMH,UAAWC,IAAUG,aAAcjB,EAAMgB,QAEnE,6BACI,4BAAQH,UAAWC,IAAUI,KAA7B,cA8BDC,6BALS,SAACC,GAAD,MAAY,CAChCC,OAAQC,YAAUF,GAClBV,WAAYa,YAAsBH,MAGE,CAACI,gBAA1BL,EAtBD,SAACnB,GAKX,OAAIA,EAAMqB,OACC,kBAAC,IAAD,CAAUI,GAAI,aAIrB,yBAAKC,MAAO,CAACC,OAAO,SAChB,qCACA,kBAAC9B,EAAD,CAAgBI,SAXP,SAAC2B,GACd5B,EAAMwB,WAAWI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAU1CtB,WAAYV,EAAMU","file":"static/js/5.f96c8ee2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport {Input} from \"../auxiliary/componentsForForm\";\r\nimport {required} from \"../auxiliary/validationOnError/filadValidation\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../BLL/AuthenticReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport auxiliary from \"../auxiliary/auxiliary.module.css\";\r\nimport {getCaptchaUrlSelector, getIsAuth} from \"../BLL/Selector/Selector\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'email'} placeholder={'email'} validate={[required]} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'password'} placeholder={'password'}\r\n                       type={'password'} validate={[required]} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={'rememberMe'} type={\"checkbox\"}/> Remember me\r\n            </div>\r\n            <div>\r\n                {props.captchaUrl && <img src={props.captchaUrl} alt={'captcha'}/>}\r\n                {props.captchaUrl &&\r\n                <Field name={'captcha'} placeholder={'Enter symbol with image.'} component={Input}/>\r\n                }\r\n            </div>\r\n            <div className={auxiliary.errorLogin}>\r\n                {props.error && <span className={auxiliary.commonError}>{props.error}</span>}\r\n            </div>\r\n            <div>\r\n                <button className={auxiliary.but}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div style={{margin:'1rem'}}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    captchaUrl: getCaptchaUrlSelector(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login);"],"sourceRoot":""}