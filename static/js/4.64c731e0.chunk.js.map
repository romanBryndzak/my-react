{"version":3,"sources":["Page/Messages/Messages.module.css","Page/Messages/Message/Message.module.css","Page/Messages/Interlocutor/Interlocutor.module.css","Page/Messages/NewMessage/NewMessage.module.css","Page/Messages/Message/Message.jsx","Page/Messages/Interlocutor/Interlocutor.jsx","Page/Messages/NewMessage/NewMessage.jsx","Page/Messages/Messages.jsx","hok/withAuthRedirect.jsx","Page/Messages/MessagesContainer.jsx"],"names":["module","exports","Message","props","className","m","wrapper","message","Interlocutor","path","id","i","ava","src","alt","to","activeClassName","active","name","maxLengthMessage300","fieldMaxLength","AddNewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","NM","text","but","NewMessage","values","newMessageText","AddNewMessage","Messages","InterlocutorElement","interlocutors","map","key","MessageElement","messages","M","mapStateToPropsForRedirect","state","isAuth","authentic","compose","connect","dispatch","AddNewMessageAction","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,2B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,IAAM,0BAA0B,OAAS,+B,oBCAnGD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,yBAAyB,IAAM,0B,wGCY/EC,EAVC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SACd,yBAAKF,UAAWC,IAAEE,SACbJ,EAAMI,W,0BCSRC,EAZM,SAACL,GAClB,IAAIM,EAAO,aAAeN,EAAMO,GAChC,OACI,yBAAKN,UAAWO,IAAEL,SACV,yBAAKF,UAAWO,IAAEC,IACbC,IAAK,+EACLC,IAAK,gBACV,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBL,IAAEM,QAASd,EAAMe,Q,oDCS/DC,EAAsBC,YAAe,KAarCC,EAAyBC,YAAU,CAACC,KAAK,iBAAhBD,EAXL,SAACnB,GACvB,OACI,0BAAMqB,SAAUrB,EAAMsB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAM,iBAAkBW,SAAU,CAACC,IAAUX,GAClEY,YAAa,6BAA8B3B,UAAW4B,IAAGC,OAEhE,4BAAQ7B,UAAW4B,IAAGE,KAAtB,mBAOGC,EA7BI,SAAChC,GAOhB,OACI,yBAAKC,UAAW4B,IAAG1B,SACf,kBAACe,EAAD,CAAwBG,SAPX,SAACY,GAClB,IAAIH,EAAOG,EAAOC,eAClBlC,EAAMmC,cAAcL,QCiBbM,EArBE,SAACpC,GAEd,IAAMqC,EAAsBrC,EAAMsC,cAAcC,KAAI,SAAA/B,GAAC,OACjD,kBAAC,EAAD,CAAcD,GAAIC,EAAED,GAAIQ,KAAMP,EAAEO,KAAMyB,IAAKhC,EAAED,QAC3CkC,EAAiBzC,EAAM0C,SAASH,KAAI,SAAArC,GAAC,OACvC,kBAAC,EAAD,CAASK,GAAIL,EAAEK,GAAIH,QAASF,EAAEE,QAASoC,IAAKtC,EAAEK,QAClD,OACI,yBAAKN,UAAW0C,IAAExC,SACd,kBAAC,EAAD,CACIgC,cAAenC,EAAMmC,gBAEzB,6BACKE,GAEL,6BACKI,K,iDCjBXG,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,UAAUD,S,OCgBjBE,4BACXC,mBAjBoB,SAACJ,GACrB,MAAO,CACHP,cAAeO,EAAMH,SAASJ,cAC9BI,SAAUG,EAAMH,SAASA,SACzBR,eAAgBW,EAAMH,SAASR,mBAIZ,SAACgB,GACxB,MAAO,CACHf,cAAe,SAACL,GACZoB,EAASC,YAAoBrB,UDPT,SAACsB,GAAe,IACtCC,EADqC,uKAGnC,OAA0B,IAAtBC,KAAKtD,MAAM8C,OACJ,kBAAC,IAAD,CAAUlC,GAAI,YACQ,IAAtB0C,KAAKtD,MAAM8C,OACX,kBAACM,EAAaE,KAAKtD,YADvB,MAL4B,GACXuD,IAAMH,WAStC,OAAOH,kBAAQL,EAARK,CAAoCI,KCEhCL,CAGbZ","file":"static/js/4.64c731e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__4PlM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__3M9S7\",\"message\":\"Message_message__2p0sZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Interlocutor_wrapper__2MuKR\",\"ava\":\"Interlocutor_ava__12Ddl\",\"active\":\"Interlocutor_active__3h4W-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewMessage_wrapper__1HA1a\",\"text\":\"NewMessage_text__3Vp2r\",\"but\":\"NewMessage_but__294Un\"};","import React from \"react\";\r\nimport m from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={m.wrapper}>\r\n            <div className={m.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport i from \"./Interlocutor.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Interlocutor = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n    return (\r\n        <div className={i.wrapper}>\r\n                <img className={i.ava}\r\n                     src={'https://i.pinimg.com/originals/c8/e2/1e/c8e21ec944696e38da97ebeb05825973.jpg'}\r\n                     alt={'avatar user'}/>\r\n                <NavLink to={path} activeClassName={i.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Interlocutor;","import React from \"react\";\r\nimport NM from \"./NewMessage.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../auxiliary/componentsForForm\";\r\nimport {fieldMaxLength, required} from \"../../../auxiliary/validationOnError/filadValidation\";\r\n\r\nconst NewMessage = (props) => {\r\n\r\n    const AddNewMessage =(values) => {\r\n        let text = values.newMessageText;\r\n        props.AddNewMessage(text);\r\n    };\r\n\r\n    return (\r\n        <div className={NM.wrapper}>\r\n            <AddNewMessageFormRedux onSubmit={AddNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLengthMessage300 = fieldMaxLength(300);\r\n\r\nconst AddNewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newMessageText'} validate={[required, maxLengthMessage300]}\r\n                   placeholder={'Please enter your message.'} className={NM.text}\r\n            />\r\n            <button className={NM.but}>Add message</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewMessageFormRedux = reduxForm({form:'AddNewMessage'})(AddNewMessageForm);\r\n\r\nexport default NewMessage;","import React from \"react\";\r\nimport M from \"./Messages.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport Interlocutor from \"./Interlocutor/Interlocutor\";\r\nimport NewMessage from \"./NewMessage/NewMessage\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    const InterlocutorElement = props.interlocutors.map(i =>\r\n        <Interlocutor id={i.id} name={i.name} key={i.id}/>);\r\n    const MessageElement = props.messages.map(m =>\r\n        <Message id={m.id} message={m.message} key={m.id}/>);\r\n    return (\r\n        <div className={M.wrapper}>\r\n            <NewMessage\r\n                AddNewMessage={props.AddNewMessage}\r\n            />\r\n            <div>\r\n                {InterlocutorElement}\r\n            </div>\r\n            <div>\r\n                {MessageElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authentic.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) {\r\n                return <Redirect to={'/login'}/>\r\n            } else if (this.props.isAuth === true) {\r\n                return <Component{...this.props}/>\r\n            }\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n\r\n\r\n// let ConnectedAuthRedirectComponent;\r\n// return ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);","import {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport {AddNewMessageAction} from \"../../BLL/messagesReducer\";\r\nimport {withAuthRedirect} from \"../../hok/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        interlocutors: state.messages.interlocutors,\r\n        messages: state.messages.messages,\r\n        newMessageText: state.messages.newMessageText,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        AddNewMessage: (text) => {\r\n            dispatch(AddNewMessageAction(text));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages);\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Messages);\r\n// const MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n// <Messages\r\n//     interlocutors={props.state.messages.interlocutors}\r\n//     messages={props.state.messages.messages}\r\n//     newMessageText={props.state.messages.newMessageText}\r\n//     dispatch={props.dispatch}\r\n// />"],"sourceRoot":""}